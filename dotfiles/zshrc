#!/usr/local/bin/zsh

export ZSH=$HOME/.oh-my-zsh
export ARCHFLAGS="-arch x86_64"
export HOMEBREW_CASK_OPTS="--appdir=/Applications"
export AWS_CREDENTIAL_FILE="~/.aws/credentials"
export HOST_ENV="development"
export HISTCONTROL=ignoreboth:erasedupsG
export CIRCLE_ESLINT_SCRIPT_ENV="dev"
export DOTFILES=$HOME/Dotfiles

export TERM=xterm-256color-italic

export PATH=/usr/local/sbin:$PATH

plugins=(bundler osx rake ruby rails gem brew zsh-completions)
autoload -U compinit -u && compinit -u

# Create prompt
source $HOME/Dotfiles/zsh/zshrc_prompt

# Helper aliases/functions
source $DOTFILES/zsh/git.zsh
source $DOTFILES/zsh/tmux.zsh
source $DOTFILES/zsh/vagrant.zsh
source $DOTFILES/zsh/eslint.zsh
source $DOTFILES/zsh/fzf.zsh
source $DOTFILES/zsh/vim.zsh
source $DOTFILES/zsh/misc.zsh
source $DOTFILES/zsh/z.zsh

# Bookbub specific helpers, not checked into public github
[ -f ~/.bookbub.zsh ] && source ~/.bookbub.zsh

setopt CORRECT
unsetopt inc_append_history
unsetopt share_history

# Colors when listing
export LD_BIND_NOW=1
export CLICOLOR=1
export LSCOLORS=GxBxhxDxfxhxhxhxhxcxcx

# Colors when using tab-completion in the command line
zstyle ':completion:*' list-colors "${(@s.:.)LS_COLORS}"
autoload -Uz compinit
compinit
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Za-z}'

# Initialize FZF
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

source /usr/local/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

source /usr/local/share/chruby/chruby.sh
source /usr/local/share/chruby/auto.sh

function tnbb() {
  tmux new -s $1 -d
  tmux split-window -h -p 66
  tmux split-window -h
  tmux select-pane -t 1
  tmux split-window -v

  tmux select-pane -t 1

  tmux send-keys -t 3 C-z 'vim' Enter
  tmux send-keys -t 4 C-z 'vim' Enter
  tmux send-keys -t 2 C-z 'src && console' Enter

  tmux attach -t $1
}

function open_prs() {
  ruby $DOTFILES/util/track_pull_request_reviews.rb open $*
}

function list_prs() {
  ruby $DOTFILES/util/track_pull_request_reviews.rb list
}

function notify_prs() {
  ruby $DOTFILES/util/track_pull_request_reviews.rb notify
}

function ecron() {
  env EDITOR=nvim crontab -e
}
